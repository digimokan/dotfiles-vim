/*******************************************************************************
* MAIN
*******************************************************************************/

SPC     LDR binding
LDR-/   this help file
q       close help
LDR-w   save current split
LDR-q   quit current split
LDR-TAB quit all splits (quit vim)
LDR-V   source vimrc

/*******************************************************************************
* MODE SWITCH
*******************************************************************************/

;       cmd mode
i       insert mode
I       insert mode at line start
ESC/jj  normal mode
a       append mode
A       append mode at line end
R       replace mode
v       visual mode
V       visual line mode
CTL-v   visual block mode

/*******************************************************************************
* NAVIGATION
*******************************************************************************/

ENT     last buffer
LDR-h   prev buffer
LDR-l   next buffer
gg      buffer start
G       buffer end
H       screen top
M       screen middle
L       screen end
0       line start
-       line end
CTL-e   line end (ins mode)
o       first/last char in visual selection
hjkl    left/down/up/right
w       next word segment start
e       next word segment end
b       prev word segment start
\       prev word segment end
fXX     go-to next XX
tXX     go-to prev XX
aw      around whole word
ap      around para (i.e. block of lines)
CL-hjkl left/down/up/right split or tmux-pane
BKSP    prev split
TAB     cycle through all splits
LDR-y   tag split for swap, do swap
←↓↑→    resize split left/down/up/right
CTL-r   reset split size
CTL-f   zoom toggle of current split
mt      toggle mark at line
m.      next mark
m,      prev mark
md      remove all marks
LDR-m   marks-window toggle

/*******************************************************************************
* VISUALS
*******************************************************************************/

ga      show cursor char unicode dec val, oct val, hex val, name
,       fold toggle
LDR-I   indent guides toggle
LDR-F   show file encoding and file format

/*******************************************************************************
* FILE BROWSER
*******************************************************************************/

T       file-browser window toggle
LDR-t   file-browser window switch to
--> b   show bookmarks
--> DEL delete selected bookmark
--> l   open file or expand dir
--> x   open file in split
--> v   open file in vsplit
--> L   expand dir recursively
--> h   collapse dir
--> H   collapse dir recursively
--> u   nav up one dir
--> c   make current dir the browser root-dir
--> C   make the browser root-dir go up one dir
--> r   refresh current dir
--> R   refresh all dirs
--> o   action menu for current file
--> q   close browser

/*******************************************************************************
* FILE FINDING
*******************************************************************************/

gf      switch to filename under cursor
go      open url under cursor
LDR-a   switch to matching .h/.c of current buffer
LDR-f   fuzzy file search from vim root dir
LDR-r   fuzzy most-recently-used search
LDR-b   fuzzy buffer search
--> CL-r  regex/fuzzy toggle
--> CL-d  whole-path/file-only toggle
--> ENT   open selected file in current buffer
--> CL-v  open selected file in new vsplit

/*******************************************************************************
* TEXT SEARCH / REPLACE
*******************************************************************************/

/       buffer search for input text
sb      buffer search for input text (show srch window)
*       buffer search for word-under-cursor
n       buffer go to next searched text
N       buffer go to prev searched text
'       go to file-pos before search
LDR-n   clear search highlighting
LDR-R   buffer search & replace %S/dog{,s}/cat{,s}/g
LDR-s   vim-root search-window toggle
st      vim-root search for input text
sf      vim-root search for word-under-cursor
sd      vim-root go to source def of word-under-cursor
sr      vim-root replace text in search-window-lines
s.      vim-root go to next search-window-line
s,      vim-root go to prev search-window-line
ENT     open selected search-window-line in buffer

/*******************************************************************************
* EDITING
*******************************************************************************/

o       edit new line below current line
O       edit new line above current line
c       change
C       change to end of line
d       delete
D       delete to end of line
x       delete char under cursor
crc     camelCase word-under-cursor
crm     MixedCase word-under-cursor
crt     Title Case word-under-cursor
crSPC   space case word-under-cursor
crs     snake_case word-under-cursor (effectively lower-cases a word!)
cru     SNAKE_CASE upper word-under-cursor (effectively upper-cases a word!)
cr-     dash-case word-under-cursor
cr.     dot.case word-under-cursor
yssX    add surrounding Xs
csXY    change surrounding Xs to Ys
dsX     delete surrounding Xs
-iX     select/change/delete Xs
-IX     select/change/delete Xs (ignore surrounding whitespace)
-aX     select/change/delete Xs-and-inside
--> '   matching ''s (also ", `, etc)
--> b   matching ()s (also (, [, etc)
--> t   matching tags (also actual <p>, etc)
--> a   matching function args
gs      go-swap function arg under cursor
CTL-l   capslock toggle (ins mode)
LDR-c   comment toggle

/*******************************************************************************
* COPY / PASTE
*******************************************************************************/

y       copy
Y       copy to end of line
F7      pastemode toggle
CTL-c   copy visual sel to system clipboard
CTL-v   paste from system clipboard in ins mode

/*******************************************************************************
* UNDO / REDO
*******************************************************************************/

u       undo
U       redo
LDR-u   undo tree window toggle

/*******************************************************************************
* CODE SYNTAX
*******************************************************************************/

E       show detailed error msg for current line
LDR-e   error-window toggle
ENT     open selected error-window-line in buffer
LDR-.   go to next error-window-line
LDR-,   go to prev error-window-line
↓↑      select next/prev completion (pop-up menu)
TAB     fill-in selected snippet (pop-up menu)
--> C-j go to next snippet field
--> C-k go to prev snippet field

/*******************************************************************************
* SOURCE CODE SUPPORT
*******************************************************************************/

LDR-S   save current layout as named session
LDR-D   delete current named session
LDR-→   go to next VCS block
LDR-←   go to prev VCS block
Xic     operate inside VCS block
Xac     operate around VCS block
LDR-g   open git status window
LDR-d   open git diff windows
> LDR-j next diff line
> LDR-k prev diff line
X       code-browser window toggle
LDR-x   code-browser switch to
--> l   expand nested symbol
--> h   collapse nested symbol
--> ENT open selected symbol in current buffer
--> q   close browser

